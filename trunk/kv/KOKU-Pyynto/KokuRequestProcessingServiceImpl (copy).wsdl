<definitions name="KokuRequestProcessingService" targetNamespace="http://soa.kv.koku.arcusys.fi/" xmlns="http://schemas.xmlsoap.org/wsdl/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:tns="http://soa.kv.koku.arcusys.fi/" xmlns:xsd="http://www.w3.org/2001/XMLSchema">
 <types>
  <xs:schema targetNamespace="http://soa.kv.koku.arcusys.fi/" version="1.0" xmlns:tns="http://soa.kv.koku.arcusys.fi/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
   <xs:element name="createRequestTemplate" type="tns:createRequestTemplate"/>
   <xs:element name="createRequestTemplateResponse" type="tns:createRequestTemplateResponse"/>
   <xs:element name="getRequestTemplateById" type="tns:getRequestTemplateById"/>
   <xs:element name="getRequestTemplateByIdResponse" type="tns:getRequestTemplateByIdResponse"/>
   <xs:element name="getRequestTemplateSummary" type="tns:getRequestTemplateSummary"/>
   <xs:element name="getRequestTemplateSummaryResponse" type="tns:getRequestTemplateSummaryResponse"/>
   <xs:element name="receiveRequest" type="tns:receiveRequest"/>
   <xs:element name="receiveRequestResponse" type="tns:receiveRequestResponse"/>
   <xs:element name="replyToRequest" type="tns:replyToRequest"/>
   <xs:element name="replyToRequestResponse" type="tns:replyToRequestResponse"/>
   <xs:element name="sendRequest" type="tns:sendRequest"/>
   <xs:element name="sendRequestResponse" type="tns:sendRequestResponse"/>
   <xs:element name="sendRequestWithTemplate" type="tns:sendRequestWithTemplate"/>
   <xs:element name="sendRequestWithTemplateResponse" type="tns:sendRequestWithTemplateResponse"/>
   <xs:complexType name="receiveRequest">
    <xs:sequence>
     <xs:element minOccurs="0" name="toUser" type="xs:string"/>
     <xs:element minOccurs="0" name="requestId" type="xs:long"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="receiveRequestResponse">
    <xs:sequence/>
   </xs:complexType>
   <xs:complexType name="replyToRequest">
    <xs:sequence>
     <xs:element minOccurs="0" name="user" type="xs:string"/>
     <xs:element minOccurs="0" name="requestId" type="xs:long"/>
     <xs:element minOccurs="0" name="answers" type="tns:answers"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="answers">
    <xs:sequence>
     <xs:element maxOccurs="unbounded" minOccurs="0" name="answer" type="tns:answer"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="answer">
    <xs:sequence>
     <xs:element minOccurs="0" name="comment" type="xs:string"/>
     <xs:element name="questionNumber" type="xs:int"/>
     <xs:element minOccurs="0" name="textValue" type="xs:string"/>
     <xs:element minOccurs="0" name="yesNoValue" type="xs:boolean"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="replyToRequestResponse">
    <xs:sequence/>
   </xs:complexType>
   <xs:complexType name="sendRequest">
    <xs:sequence>
     <xs:element minOccurs="0" name="fromUser" type="xs:string"/>
     <xs:element minOccurs="0" name="subject" type="xs:string"/>
     <xs:element minOccurs="0" name="receipients" type="tns:receipients"/>
     <xs:element minOccurs="0" name="questions" type="tns:questions"/>
     <xs:element minOccurs="0" name="requestContent" type="xs:string"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="receipients">
    <xs:sequence>
     <xs:element maxOccurs="unbounded" minOccurs="0" name="receipient" type="xs:string"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="questions">
    <xs:sequence>
     <xs:element maxOccurs="unbounded" minOccurs="0" name="question" type="tns:question"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="question">
    <xs:sequence>
     <xs:element minOccurs="0" name="description" type="xs:string"/>
     <xs:element name="number" type="xs:int"/>
     <xs:element minOccurs="0" name="type" type="tns:questionType"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sendRequestResponse">
    <xs:sequence>
     <xs:element minOccurs="0" name="requestId" type="xs:long"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="createRequestTemplate">
    <xs:sequence>
     <xs:element minOccurs="0" name="creator" type="xs:string"/>
     <xs:element minOccurs="0" name="subject" type="xs:string"/>
     <xs:element minOccurs="0" name="questions" type="tns:questions"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="createRequestTemplateResponse">
    <xs:sequence/>
   </xs:complexType>
   <xs:complexType name="getRequestTemplateSummary">
    <xs:sequence>
     <xs:element minOccurs="0" name="subjectPrefix" type="xs:string"/>
     <xs:element name="limit" type="xs:int"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getRequestTemplateSummaryResponse">
    <xs:sequence>
     <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:requestTemplateSummary"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestTemplateSummary">
    <xs:sequence>
     <xs:element minOccurs="0" name="requestTemplateId" type="xs:long"/>
     <xs:element minOccurs="0" name="subject" type="xs:string"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getRequestTemplateById">
    <xs:sequence>
     <xs:element name="requestTemplateId" type="xs:long"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="getRequestTemplateByIdResponse">
    <xs:sequence>
     <xs:element minOccurs="0" name="return" type="tns:requestTemplateTO"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="requestTemplateTO">
    <xs:complexContent>
     <xs:extension base="tns:requestTemplateSummary">
      <xs:sequence>
       <xs:element maxOccurs="unbounded" minOccurs="0" name="questions" nillable="true" type="tns:question"/>
      </xs:sequence>
     </xs:extension>
    </xs:complexContent>
   </xs:complexType>
   <xs:complexType name="sendRequestWithTemplate">
    <xs:sequence>
     <xs:element minOccurs="0" name="fromUser" type="xs:string"/>
     <xs:element name="requestTemplateId" type="xs:long"/>
     <xs:element minOccurs="0" name="subject" type="xs:string"/>
     <xs:element minOccurs="0" name="receipients" type="tns:receipients"/>
     <xs:element minOccurs="0" name="requestContent" type="xs:string"/>
    </xs:sequence>
   </xs:complexType>
   <xs:complexType name="sendRequestWithTemplateResponse">
    <xs:sequence>
     <xs:element minOccurs="0" name="return" type="xs:long"/>
    </xs:sequence>
   </xs:complexType>
   <xs:simpleType name="questionType">
    <xs:restriction base="xs:string">
     <xs:enumeration value="YES_NO"/>
     <xs:enumeration value="FREE_TEXT"/>
     <xs:enumeration value="MULTIPLE_CHOICE"/>
    </xs:restriction>
   </xs:simpleType>
  </xs:schema>
 </types>
 <message name="KokuRequestProcessingService_sendRequestWithTemplateResponse">
  <part element="tns:sendRequestWithTemplateResponse" name="sendRequestWithTemplateResponse"/>
 </message>
 <message name="KokuRequestProcessingService_replyToRequest">
  <part element="tns:replyToRequest" name="replyToRequest"/>
 </message>
 <message name="KokuRequestProcessingService_sendRequestResponse">
  <part element="tns:sendRequestResponse" name="sendRequestResponse"/>
 </message>
 <message name="KokuRequestProcessingService_receiveRequest">
  <part element="tns:receiveRequest" name="receiveRequest"/>
 </message>
 <message name="KokuRequestProcessingService_getRequestTemplateSummary">
  <part element="tns:getRequestTemplateSummary" name="getRequestTemplateSummary"/>
 </message>
 <message name="KokuRequestProcessingService_createRequestTemplateResponse">
  <part element="tns:createRequestTemplateResponse" name="createRequestTemplateResponse"/>
 </message>
 <message name="KokuRequestProcessingService_getRequestTemplateByIdResponse">
  <part element="tns:getRequestTemplateByIdResponse" name="getRequestTemplateByIdResponse"/>
 </message>
 <message name="KokuRequestProcessingService_receiveRequestResponse">
  <part element="tns:receiveRequestResponse" name="receiveRequestResponse"/>
 </message>
 <message name="KokuRequestProcessingService_getRequestTemplateSummaryResponse">
  <part element="tns:getRequestTemplateSummaryResponse" name="getRequestTemplateSummaryResponse"/>
 </message>
 <message name="KokuRequestProcessingService_replyToRequestResponse">
  <part element="tns:replyToRequestResponse" name="replyToRequestResponse"/>
 </message>
 <message name="KokuRequestProcessingService_sendRequest">
  <part element="tns:sendRequest" name="sendRequest"/>
 </message>
 <message name="KokuRequestProcessingService_sendRequestWithTemplate">
  <part element="tns:sendRequestWithTemplate" name="sendRequestWithTemplate"/>
 </message>
 <message name="KokuRequestProcessingService_getRequestTemplateById">
  <part element="tns:getRequestTemplateById" name="getRequestTemplateById"/>
 </message>
 <message name="KokuRequestProcessingService_createRequestTemplate">
  <part element="tns:createRequestTemplate" name="createRequestTemplate"/>
 </message>
 <portType name="KokuRequestProcessingService">
  <operation name="createRequestTemplate" parameterOrder="createRequestTemplate">
   <input message="tns:KokuRequestProcessingService_createRequestTemplate"/>
   <output message="tns:KokuRequestProcessingService_createRequestTemplateResponse"/>
  </operation>
  <operation name="getRequestTemplateById" parameterOrder="getRequestTemplateById">
   <input message="tns:KokuRequestProcessingService_getRequestTemplateById"/>
   <output message="tns:KokuRequestProcessingService_getRequestTemplateByIdResponse"/>
  </operation>
  <operation name="getRequestTemplateSummary" parameterOrder="getRequestTemplateSummary">
   <input message="tns:KokuRequestProcessingService_getRequestTemplateSummary"/>
   <output message="tns:KokuRequestProcessingService_getRequestTemplateSummaryResponse"/>
  </operation>
  <operation name="receiveRequest" parameterOrder="receiveRequest">
   <input message="tns:KokuRequestProcessingService_receiveRequest"/>
   <output message="tns:KokuRequestProcessingService_receiveRequestResponse"/>
  </operation>
  <operation name="replyToRequest" parameterOrder="replyToRequest">
   <input message="tns:KokuRequestProcessingService_replyToRequest"/>
   <output message="tns:KokuRequestProcessingService_replyToRequestResponse"/>
  </operation>
  <operation name="sendRequest" parameterOrder="sendRequest">
   <input message="tns:KokuRequestProcessingService_sendRequest"/>
   <output message="tns:KokuRequestProcessingService_sendRequestResponse"/>
  </operation>
  <operation name="sendRequestWithTemplate" parameterOrder="sendRequestWithTemplate">
   <input message="tns:KokuRequestProcessingService_sendRequestWithTemplate"/>
   <output message="tns:KokuRequestProcessingService_sendRequestWithTemplateResponse"/>
  </operation>
 </portType>
 <binding name="KokuRequestProcessingServiceBinding" type="tns:KokuRequestProcessingService">
  <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
  <operation name="createRequestTemplate">
   <soap:operation soapAction=""/>
   <input>
    <soap:body use="literal"/>
   </input>
   <output>
    <soap:body use="literal"/>
   </output>
  </operation>
  <operation name="getRequestTemplateById">
   <soap:operation soapAction=""/>
   <input>
    <soap:body use="literal"/>
   </input>
   <output>
    <soap:body use="literal"/>
   </output>
  </operation>
  <operation name="getRequestTemplateSummary">
   <soap:operation soapAction=""/>
   <input>
    <soap:body use="literal"/>
   </input>
   <output>
    <soap:body use="literal"/>
   </output>
  </operation>
  <operation name="receiveRequest">
   <soap:operation soapAction=""/>
   <input>
    <soap:body use="literal"/>
   </input>
   <output>
    <soap:body use="literal"/>
   </output>
  </operation>
  <operation name="replyToRequest">
   <soap:operation soapAction=""/>
   <input>
    <soap:body use="literal"/>
   </input>
   <output>
    <soap:body use="literal"/>
   </output>
  </operation>
  <operation name="sendRequest">
   <soap:operation soapAction=""/>
   <input>
    <soap:body use="literal"/>
   </input>
   <output>
    <soap:body use="literal"/>
   </output>
  </operation>
  <operation name="sendRequestWithTemplate">
   <soap:operation soapAction=""/>
   <input>
    <soap:body use="literal"/>
   </input>
   <output>
    <soap:body use="literal"/>
   </output>
  </operation>
 </binding>
 <service name="KokuRequestProcessingService">
  <port binding="tns:KokuRequestProcessingServiceBinding" name="KokuRequestProcessingServicePort">
   <soap:address location="http://gatein.intra.arcusys.fi:8080/arcusys-koku-0.1-SNAPSHOT-kv-model-0.1-SNAPSHOT/KokuRequestProcessingServiceImpl"/>
  </port>
 </service>
</definitions>